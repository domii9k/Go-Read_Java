package VIEW;

//imports necessários para a execução da tela
import DAO.EbookDAO;
import DAO.ItemPedidoDAO;
import DAO.PedidoDAO;
import DTO.ClienteDTO;
import DTO.EbookDTO;
import DTO.ItemPedidoDTO;
import DTO.PedidoDTO;
import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import java.sql.Date;

/**
 *
 * @author Grupo em conjunto cada membro fez uma tela.
 */
public class CadPedidoVIEW extends javax.swing.JFrame {

    ClienteDTO objclienteDTO = new ClienteDTO(); //criando objeto da classe clientedto com as variáveis encapsuladas
    float preco = 0, subtotal = 0, total = 0; // variáveis declaradas na área publica do código para cálculos necessários do pedido
    int qtd = 0; // variavel de quantidade para cálculos do pedido
    DefaultTableModel itemPedido; // tabela itempedido, para que, mais a frente, os itens possam ser cadastrados a apartir dela

    /**
     * Creates new form CadPedidoVIEW Criando novo formulário CadPedidoVIEW
     */
    public CadPedidoVIEW() {
        initComponents();

        addPlaceholderStyle(txtCpfCadPedido);
        addPlaceholderStyle(txtCnpjCadPedido);

    }
    int y, x;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        deskCadPedido = new javax.swing.JDesktopPane();
        pnlObservacoes = new javax.swing.JPanel();
        lblObservacoes = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtObservacoesCadPedido = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnlfundoItensProd = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblListaCadPedido = new javax.swing.JTable();
        txtIsbnCadPedido = new javax.swing.JTextField();
        lblISBNebook = new javax.swing.JLabel();
        txtQuantCopiasCadPedido = new javax.swing.JTextField();
        lblQuantProd = new javax.swing.JLabel();
        btnAdicionarCadPedido = new javax.swing.JButton();
        lblPrecoEbook = new javax.swing.JLabel();
        btnExcluirItemPedido = new javax.swing.JButton();
        lblEbookPed = new javax.swing.JLabel();
        txtPrecoEbook = new javax.swing.JTextField();
        txtTituloEbookSetado = new javax.swing.JTextField();
        fundoDadosPedido = new javax.swing.JPanel();
        lblNomeClienteCadPedido = new javax.swing.JLabel();
        lblSituacCad = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtIdCadPedido = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtFormaPagamentoCadPedido = new javax.swing.JTextField();
        rbnCpf = new javax.swing.JRadioButton();
        rbnCnpj = new javax.swing.JRadioButton();
        txtClienteCadPedido = new javax.swing.JTextField();
        txtCnpjCadPedido = new javax.swing.JFormattedTextField();
        txtCpfCadPedido = new javax.swing.JFormattedTextField();
        lblPesquisaPedido = new javax.swing.JLabel();
        lblPesquisaCliente = new javax.swing.JLabel();
        lblEmailClientePedido = new javax.swing.JLabel();
        txtEmailClientePedido = new javax.swing.JTextField();
        txtDataCadPedido = new javax.swing.JFormattedTextField();
        btnSalvarCadPedido = new javax.swing.JButton();
        btnCancelarCadPedido = new javax.swing.JButton();
        pnlBordaSupCadPedido = new javax.swing.JPanel();
        lblTituloPagCADped = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblPesquisaEbookPedido = new javax.swing.JTable();
        txtProdutoCadPedido = new javax.swing.JTextField();
        lblNomeEbookPedido = new javax.swing.JLabel();
        lblpesquisarEbook = new javax.swing.JLabel();
        pnlValorTotal = new javax.swing.JPanel();
        lblValorTotal = new javax.swing.JLabel();
        txtValorTotalCadPedido = new javax.swing.JFormattedTextField();
        btnAlterarPedido = new javax.swing.JButton();
        lblFundoCadPedido = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        deskCadPedido.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlObservacoes.setBackground(new java.awt.Color(204, 204, 204));

        lblObservacoes.setBackground(new java.awt.Color(0, 0, 0));
        lblObservacoes.setText("Observações:");

        txtObservacoesCadPedido.setColumns(20);
        txtObservacoesCadPedido.setRows(5);
        txtObservacoesCadPedido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane4.setViewportView(txtObservacoesCadPedido);

        javax.swing.GroupLayout pnlObservacoesLayout = new javax.swing.GroupLayout(pnlObservacoes);
        pnlObservacoes.setLayout(pnlObservacoesLayout);
        pnlObservacoesLayout.setHorizontalGroup(
            pnlObservacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlObservacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlObservacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
                    .addGroup(pnlObservacoesLayout.createSequentialGroup()
                        .addComponent(lblObservacoes)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlObservacoesLayout.setVerticalGroup(
            pnlObservacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlObservacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblObservacoes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addContainerGap())
        );

        deskCadPedido.add(pnlObservacoes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 710, 180));

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0));

        pnlfundoItensProd.setBackground(new java.awt.Color(30, 34, 60));
        pnlfundoItensProd.setFocusCycleRoot(true);
        pnlfundoItensProd.setPreferredSize(new java.awt.Dimension(880, 1112));

        tblListaCadPedido.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tblListaCadPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "Titulo", "Qtd.", "Preço", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblListaCadPedido);

        txtIsbnCadPedido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtIsbnCadPedido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtIsbnCadPedido.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        lblISBNebook.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblISBNebook.setForeground(new java.awt.Color(255, 255, 255));
        lblISBNebook.setText("ISBN:");

        txtQuantCopiasCadPedido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtQuantCopiasCadPedido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblQuantProd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblQuantProd.setForeground(new java.awt.Color(255, 255, 255));
        lblQuantProd.setText("Qtd. Cópias");

        btnAdicionarCadPedido.setBackground(new java.awt.Color(84, 113, 97));
        btnAdicionarCadPedido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAdicionarCadPedido.setForeground(new java.awt.Color(255, 255, 255));
        btnAdicionarCadPedido.setText("Adicionar");
        btnAdicionarCadPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarCadPedidoActionPerformed(evt);
            }
        });

        lblPrecoEbook.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPrecoEbook.setForeground(new java.awt.Color(255, 255, 255));
        lblPrecoEbook.setText("Preço R$:");

        btnExcluirItemPedido.setBackground(new java.awt.Color(84, 113, 94));
        btnExcluirItemPedido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnExcluirItemPedido.setForeground(new java.awt.Color(255, 255, 255));
        btnExcluirItemPedido.setText("Excluir");
        btnExcluirItemPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirItemPedidoActionPerformed(evt);
            }
        });

        lblEbookPed.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEbookPed.setForeground(new java.awt.Color(255, 255, 255));
        lblEbookPed.setText("Ebook");

        txtPrecoEbook.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPrecoEbook.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtTituloEbookSetado.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTituloEbookSetado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout pnlfundoItensProdLayout = new javax.swing.GroupLayout(pnlfundoItensProd);
        pnlfundoItensProd.setLayout(pnlfundoItensProdLayout);
        pnlfundoItensProdLayout.setHorizontalGroup(
            pnlfundoItensProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlfundoItensProdLayout.createSequentialGroup()
                .addGroup(pnlfundoItensProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlfundoItensProdLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlfundoItensProdLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlfundoItensProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlfundoItensProdLayout.createSequentialGroup()
                                .addGroup(pnlfundoItensProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlfundoItensProdLayout.createSequentialGroup()
                                        .addComponent(lblISBNebook)
                                        .addGap(83, 83, 83)
                                        .addComponent(lblEbookPed))
                                    .addGroup(pnlfundoItensProdLayout.createSequentialGroup()
                                        .addGroup(pnlfundoItensProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblQuantProd)
                                            .addComponent(txtQuantCopiasCadPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pnlfundoItensProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lblPrecoEbook)
                                            .addComponent(txtPrecoEbook, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(btnAdicionarCadPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(btnExcluirItemPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlfundoItensProdLayout.createSequentialGroup()
                                .addComponent(txtIsbnCadPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTituloEbookSetado)))))
                .addContainerGap(460, Short.MAX_VALUE))
        );
        pnlfundoItensProdLayout.setVerticalGroup(
            pnlfundoItensProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlfundoItensProdLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlfundoItensProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblISBNebook)
                    .addComponent(lblEbookPed))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlfundoItensProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIsbnCadPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTituloEbookSetado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(pnlfundoItensProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantProd)
                    .addComponent(lblPrecoEbook))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlfundoItensProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionarCadPedido)
                    .addComponent(btnExcluirItemPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtQuantCopiasCadPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrecoEbook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(631, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(pnlfundoItensProd);

        deskCadPedido.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 440, 260));

        fundoDadosPedido.setBackground(new java.awt.Color(204, 204, 204));

        lblNomeClienteCadPedido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNomeClienteCadPedido.setText("Cliente:");

        lblSituacCad.setText("Situação Cadastral:");

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Data:");

        jLabel7.setText("ID Pedido:");

        txtIdCadPedido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtIdCadPedido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel17.setText("Forma de Pagamento:");

        txtFormaPagamentoCadPedido.setEditable(false);
        txtFormaPagamentoCadPedido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtFormaPagamentoCadPedido.setForeground(new java.awt.Color(153, 153, 153));
        txtFormaPagamentoCadPedido.setText("DINHEIRO");
        txtFormaPagamentoCadPedido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtFormaPagamentoCadPedido.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        txtFormaPagamentoCadPedido.setDragEnabled(true);

        rbnCpf.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(rbnCpf);
        rbnCpf.setText("CPF");
        rbnCpf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbnCpfMouseClicked(evt);
            }
        });

        rbnCnpj.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(rbnCnpj);
        rbnCnpj.setText("CNPJ");
        rbnCnpj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbnCnpjMouseClicked(evt);
            }
        });

        txtClienteCadPedido.setEditable(false);
        txtClienteCadPedido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtClienteCadPedido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtClienteCadPedido.setEnabled(false);
        txtClienteCadPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClienteCadPedidoActionPerformed(evt);
            }
        });

        txtCnpjCadPedido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        try {
            txtCnpjCadPedido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCnpjCadPedido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtCnpjCadPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCnpjCadPedidoActionPerformed(evt);
            }
        });

        txtCpfCadPedido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        try {
            txtCpfCadPedido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpfCadPedido.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtCpfCadPedido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblPesquisaPedido.setBackground(new java.awt.Color(0, 153, 153));
        lblPesquisaPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/icon tela/lupa3.png"))); // NOI18N
        lblPesquisaPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPesquisaPedidoMouseClicked(evt);
            }
        });

        lblPesquisaCliente.setBackground(new java.awt.Color(0, 153, 153));
        lblPesquisaCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/icon tela/lupa3.png"))); // NOI18N
        lblPesquisaCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPesquisaClienteMouseClicked(evt);
            }
        });

        lblEmailClientePedido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEmailClientePedido.setText("E-mail:");

        txtEmailClientePedido.setEditable(false);
        txtEmailClientePedido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtEmailClientePedido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtDataCadPedido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        try {
            txtDataCadPedido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataCadPedido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDataCadPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataCadPedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fundoDadosPedidoLayout = new javax.swing.GroupLayout(fundoDadosPedido);
        fundoDadosPedido.setLayout(fundoDadosPedidoLayout);
        fundoDadosPedidoLayout.setHorizontalGroup(
            fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fundoDadosPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fundoDadosPedidoLayout.createSequentialGroup()
                        .addGroup(fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCpfCadPedido)
                            .addComponent(txtCnpjCadPedido, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbnCnpj)
                            .addComponent(rbnCpf))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmailClientePedido)
                            .addComponent(lblNomeClienteCadPedido)
                            .addGroup(fundoDadosPedidoLayout.createSequentialGroup()
                                .addGroup(fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtEmailClientePedido, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtClienteCadPedido, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblPesquisaCliente))))
                    .addComponent(lblSituacCad))
                .addGap(32, 32, 32)
                .addGroup(fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(fundoDadosPedidoLayout.createSequentialGroup()
                        .addGroup(fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(txtFormaPagamentoCadPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33))
                    .addGroup(fundoDadosPedidoLayout.createSequentialGroup()
                        .addGroup(fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(fundoDadosPedidoLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(96, 96, 96))
                            .addGroup(fundoDadosPedidoLayout.createSequentialGroup()
                                .addComponent(txtDataCadPedido)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(fundoDadosPedidoLayout.createSequentialGroup()
                                .addComponent(txtIdCadPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblPesquisaPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(60, 60, 60))
        );
        fundoDadosPedidoLayout.setVerticalGroup(
            fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fundoDadosPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSituacCad)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(lblNomeClienteCadPedido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtIdCadPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblPesquisaPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDataCadPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbnCpf)
                        .addComponent(txtClienteCadPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCpfCadPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblPesquisaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fundoDadosPedidoLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(lblEmailClientePedido))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFormaPagamentoCadPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmailClientePedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56))
                    .addGroup(fundoDadosPedidoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(fundoDadosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCnpjCadPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbnCnpj))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        deskCadPedido.add(fundoDadosPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 900, 120));

        btnSalvarCadPedido.setBackground(new java.awt.Color(84, 119, 97));
        btnSalvarCadPedido.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSalvarCadPedido.setForeground(new java.awt.Color(255, 255, 255));
        btnSalvarCadPedido.setText("Salvar");
        btnSalvarCadPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarCadPedidoActionPerformed(evt);
            }
        });
        deskCadPedido.add(btnSalvarCadPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 520, 120, 30));

        btnCancelarCadPedido.setBackground(new java.awt.Color(30, 34, 60));
        btnCancelarCadPedido.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnCancelarCadPedido.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelarCadPedido.setText("Cancelar");
        btnCancelarCadPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCadPedidoActionPerformed(evt);
            }
        });
        deskCadPedido.add(btnCancelarCadPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 600, 120, 30));

        pnlBordaSupCadPedido.setBackground(new java.awt.Color(30, 34, 60));

        lblTituloPagCADped.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        lblTituloPagCADped.setForeground(new java.awt.Color(255, 255, 255));
        lblTituloPagCADped.setText("CADASTRO PEDIDO");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/icon tela/IconCloseXXX.png"))); // NOI18N
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlBordaSupCadPedidoLayout = new javax.swing.GroupLayout(pnlBordaSupCadPedido);
        pnlBordaSupCadPedido.setLayout(pnlBordaSupCadPedidoLayout);
        pnlBordaSupCadPedidoLayout.setHorizontalGroup(
            pnlBordaSupCadPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBordaSupCadPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTituloPagCADped)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 624, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        pnlBordaSupCadPedidoLayout.setVerticalGroup(
            pnlBordaSupCadPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBordaSupCadPedidoLayout.createSequentialGroup()
                .addGroup(pnlBordaSupCadPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(pnlBordaSupCadPedidoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTituloPagCADped, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        deskCadPedido.add(pnlBordaSupCadPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 40));

        jPanel1.setBackground(new java.awt.Color(30, 34, 60));

        tblPesquisaEbookPedido.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tblPesquisaEbookPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "Título", "Preço", "Editora"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPesquisaEbookPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPesquisaEbookPedidoMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblPesquisaEbookPedido);

        txtProdutoCadPedido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtProdutoCadPedido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtProdutoCadPedido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProdutoCadPedidoKeyReleased(evt);
            }
        });

        lblNomeEbookPedido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNomeEbookPedido.setForeground(new java.awt.Color(255, 255, 255));
        lblNomeEbookPedido.setText("Ebook:");

        lblpesquisarEbook.setBackground(new java.awt.Color(255, 255, 255));
        lblpesquisarEbook.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        lblpesquisarEbook.setForeground(new java.awt.Color(255, 255, 255));
        lblpesquisarEbook.setText("Pesquisar Ebook");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblNomeEbookPedido))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(lblpesquisarEbook)))
                        .addGap(0, 117, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(txtProdutoCadPedido))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblpesquisarEbook)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(lblNomeEbookPedido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtProdutoCadPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        deskCadPedido.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 180, 450, 260));

        pnlValorTotal.setBackground(new java.awt.Color(204, 204, 204));

        lblValorTotal.setBackground(new java.awt.Color(255, 255, 255));
        lblValorTotal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblValorTotal.setText("Total R$:");

        txtValorTotalCadPedido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        javax.swing.GroupLayout pnlValorTotalLayout = new javax.swing.GroupLayout(pnlValorTotal);
        pnlValorTotal.setLayout(pnlValorTotalLayout);
        pnlValorTotalLayout.setHorizontalGroup(
            pnlValorTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlValorTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblValorTotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValorTotalCadPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        pnlValorTotalLayout.setVerticalGroup(
            pnlValorTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlValorTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlValorTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValorTotalCadPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        deskCadPedido.add(pnlValorTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 450, 180, -1));

        btnAlterarPedido.setBackground(new java.awt.Color(84, 119, 97));
        btnAlterarPedido.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAlterarPedido.setForeground(new java.awt.Color(255, 255, 255));
        btnAlterarPedido.setText("Alterar");
        btnAlterarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarPedidoActionPerformed(evt);
            }
        });
        deskCadPedido.add(btnAlterarPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 560, 120, 30));

        lblFundoCadPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VIEW/icon tela/Desktop - 2.png"))); // NOI18N
        lblFundoCadPedido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(30, 34, 60)));
        deskCadPedido.add(lblFundoCadPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 640));

        getContentPane().add(deskCadPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 640));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void addPlaceholderStyle(JTextField textField) {
        Font font = textField.getFont();
        font = font.deriveFont(Font.ITALIC);
        textField.setFont(font);
        textField.setForeground(Color.gray);

    }

    public void removePlaceholderStyle(JTextField textField) {
        Font font = textField.getFont();
        font = font.deriveFont(Font.PLAIN | Font.BOLD);
        textField.setFont(font);
        textField.setForeground(Color.black);

    }

    /**
     *
     * @param evt Esse Evento chama o método CadPedido, para realizar o cadastro
     * do pedido.
     */
    private void btnSalvarCadPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarCadPedidoActionPerformed
        //Chamando o método de cadastrar o pedido.
        try {
            CadPedido();
            sentEmail();
        } catch (SQLException e) {
            Logger.getLogger(CadPedidoVIEW.class.getName()).log(Level.SEVERE, null, e);
            //tratamento de erro caso o cadstro não tenha sido efetuado
        } finally {
            limparCampos();// assim que salvo o cadastro, os campos serão, todos, resetados
        }

    }//GEN-LAST:event_btnSalvarCadPedidoActionPerformed

    /**
     * Método dispose(); permite fechar uma janela sem ter que sair de todo o
     * sistema.
     *
     * @param evt
     */
    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // Fechar janela
        dispose();
    }//GEN-LAST:event_jLabel12MouseClicked

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        int xx = evt.getXOnScreen();
        int yy = evt.getYOnScreen();
        this.setLocation(xx - x, yy - y);
    }//GEN-LAST:event_formMouseDragged

    /**
     *
     * @param evt txtProdutoCadPedidoKeyReleased Evento criado para pesquisar
     * ebook dentro da tabela tblPesquisaEbookPedido.
     */

    private void txtProdutoCadPedidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdutoCadPedidoKeyReleased
        //Método criado para pesquisar ebooks dentro da tela de pedido   
        PedidoDAO pedidobuscaEbookdao = new PedidoDAO();
        /*criando obj de PedidoDAO para chamar o método pesquisarEbook();*/
        try {
            pedidobuscaEbookdao.pesquisarEbook(txtProdutoCadPedido, tblPesquisaEbookPedido);

        } catch (Exception e) {
            Logger.getLogger(CadPedidoVIEW.class
                    .getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_txtProdutoCadPedidoKeyReleased

    /**
     *
     * @param evt Evento criado para cancelar um pedido.
     */
    private void btnCancelarCadPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCadPedidoActionPerformed
        //Evento para cancelar um pedido
        int opcao = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja cancelar o pedido?\nTodos os campos serão apagados.", "Cancelar Pedido", JOptionPane.YES_NO_OPTION);
        if (opcao == 0) {
            try {
                limparCampos();
                JOptionPane.showMessageDialog(null, "Pedido cancelado com sucesso!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Pedido não pôde ser cancelado! \n" + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE
                );
                return;
            }
        }

    }//GEN-LAST:event_btnCancelarCadPedidoActionPerformed

    /**
     * evento de pesquisa do pedido pelo id
     *
     * @param evt
     */
    private void lblPesquisaPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPesquisaPedidoMouseClicked
        try {
            // Pesquisar pelo pedido
            if (txtIdCadPedido.getText().equals("")) {
                BuscaPedidoVIEW view = new BuscaPedidoVIEW();
                view.setVisible(true);
            } else if (txtIdCadPedido.getText() != null) {
                setarItemPedido();
                setarcli();
            }
        } catch (SQLException ex) {
            Logger.getLogger(CadPedidoVIEW.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_lblPesquisaPedidoMouseClicked

    private void lblPesquisaClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPesquisaClienteMouseClicked
        try {
            //setar Campos cliente
            setarcli();
            lblPesquisaPedido.disable();
        } catch (SQLException ex) {
            Logger.getLogger(CadPedidoVIEW.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_lblPesquisaClienteMouseClicked

    private void txtCnpjCadPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCnpjCadPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCnpjCadPedidoActionPerformed

    /**
     *
     * @param evt Método de alteração da tela de pedido, usando de referencia o
     * id do mesmo
     */
    private void btnAlterarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarPedidoActionPerformed
        // Método para alterar o pedido
        try {
            alteraPedido();
            limparCampos();
        } catch (Exception e) {
            Logger.getLogger(CadPedidoVIEW.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_btnAlterarPedidoActionPerformed

    /**
     *
     * @param evt Evento Excluir ItemPedido
     */
    private void btnExcluirItemPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirItemPedidoActionPerformed
        // TODO add your handling code here:

        DefaultTableModel dtm = (DefaultTableModel) tblListaCadPedido.getModel();
        if (tblListaCadPedido.getSelectedRow() >= 0) {
            tblListaCadPedido.setModel(dtm);
            if (total > 0) {
                int quantNovo;
                float precoNovo, totalAtt = 0, subAtt;
                int setar = tblListaCadPedido.getSelectedRow();
                quantNovo = Integer.valueOf(tblListaCadPedido.getModel().getValueAt(setar, 2).toString());
                precoNovo = Float.valueOf(tblListaCadPedido.getModel().getValueAt(setar, 3).toString());
                subAtt = Float.valueOf(tblListaCadPedido.getModel().getValueAt(setar, 4).toString());
                subAtt = quantNovo * precoNovo;
                totalAtt -= subAtt;

                txtValorTotalCadPedido.setText(String.valueOf(totalAtt));
            }
            dtm.removeRow(tblListaCadPedido.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(null, "Favor selecionar uma linha");
        }
    }//GEN-LAST:event_btnExcluirItemPedidoActionPerformed

    /**
     *
     * @param evt Este Evento chama o adicionaEbook(), fazendo com que os itens
     * sejam adicionados à tabela de itempedido.
     */
    private void btnAdicionarCadPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarCadPedidoActionPerformed
        // adicionar item à tabela de itens do pedido.
        adicionaEbook();
        limparCaposItemPedido();
    }//GEN-LAST:event_btnAdicionarCadPedidoActionPerformed

    private void rbnCpfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbnCpfMouseClicked
        // se o radiobutton de cpf é selecionado o de cnpj e o campo de cnpj são desabilitados
        if (rbnCpf.isSelected()) {
            rbnCnpj.setEnabled(false);
            txtCnpjCadPedido.setEnabled(false);
        }
    }//GEN-LAST:event_rbnCpfMouseClicked

    private void rbnCnpjMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbnCnpjMouseClicked
        // se o radio button de cnpj for selecionado o botão de cpf e o campo de cpf são desabilitados 
        if (rbnCnpj.isSelected()) {
            rbnCpf.setEnabled(false);
            txtCpfCadPedido.setEnabled(false);
        }
    }//GEN-LAST:event_rbnCnpjMouseClicked

    private void tblPesquisaEbookPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPesquisaEbookPedidoMouseClicked
        //Setando os campos dos itens pedido para serem adicionados no mesmo

        setarCamposTblEbook();
    }//GEN-LAST:event_tblPesquisaEbookPedidoMouseClicked

    private void txtClienteCadPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClienteCadPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClienteCadPedidoActionPerformed

    private void txtDataCadPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataCadPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataCadPedidoActionPerformed

    /**
     * @param args the command line arguments executor da tela PedidoVIEW
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadPedidoVIEW.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadPedidoVIEW.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadPedidoVIEW.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadPedidoVIEW.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadPedidoVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarCadPedido;
    private javax.swing.JButton btnAlterarPedido;
    private javax.swing.JButton btnCancelarCadPedido;
    private javax.swing.JButton btnExcluirItemPedido;
    private javax.swing.JButton btnSalvarCadPedido;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JDesktopPane deskCadPedido;
    private javax.swing.JPanel fundoDadosPedido;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblEbookPed;
    private javax.swing.JLabel lblEmailClientePedido;
    private javax.swing.JLabel lblFundoCadPedido;
    private javax.swing.JLabel lblISBNebook;
    private javax.swing.JLabel lblNomeClienteCadPedido;
    private javax.swing.JLabel lblNomeEbookPedido;
    private javax.swing.JLabel lblObservacoes;
    private javax.swing.JLabel lblPesquisaCliente;
    private javax.swing.JLabel lblPesquisaPedido;
    private javax.swing.JLabel lblPrecoEbook;
    private javax.swing.JLabel lblQuantProd;
    private javax.swing.JLabel lblSituacCad;
    private javax.swing.JLabel lblTituloPagCADped;
    private javax.swing.JLabel lblValorTotal;
    private javax.swing.JLabel lblpesquisarEbook;
    private javax.swing.JPanel pnlBordaSupCadPedido;
    private javax.swing.JPanel pnlObservacoes;
    private javax.swing.JPanel pnlValorTotal;
    private javax.swing.JPanel pnlfundoItensProd;
    private javax.swing.JRadioButton rbnCnpj;
    private javax.swing.JRadioButton rbnCpf;
    private javax.swing.JTable tblListaCadPedido;
    private javax.swing.JTable tblPesquisaEbookPedido;
    private javax.swing.JTextField txtClienteCadPedido;
    private javax.swing.JFormattedTextField txtCnpjCadPedido;
    private javax.swing.JFormattedTextField txtCpfCadPedido;
    private javax.swing.JFormattedTextField txtDataCadPedido;
    private javax.swing.JTextField txtEmailClientePedido;
    private javax.swing.JTextField txtFormaPagamentoCadPedido;
    private javax.swing.JTextField txtIdCadPedido;
    private javax.swing.JTextField txtIsbnCadPedido;
    private javax.swing.JTextArea txtObservacoesCadPedido;
    private javax.swing.JTextField txtPrecoEbook;
    private javax.swing.JTextField txtProdutoCadPedido;
    private javax.swing.JTextField txtQuantCopiasCadPedido;
    private javax.swing.JTextField txtTituloEbookSetado;
    private javax.swing.JFormattedTextField txtValorTotalCadPedido;
    // End of variables declaration//GEN-END:variables

    /**
     *
     * @throws SQLException Método de cadastro do Pedido
     */
    private void CadPedido() throws SQLException {
        //atribuindo valores ao campos de texto
        String clientecpf, clientecnpj, forma_pag;
        String valorTotal, observ;
        Date data = null;
        clientecpf = txtCpfCadPedido.getText();
        clientecnpj = txtCnpjCadPedido.getText();
        forma_pag = txtFormaPagamentoCadPedido.getText();
        valorTotal = txtValorTotalCadPedido.getText().replace(",", ".");
        observ = txtObservacoesCadPedido.getText();

        PedidoDTO pedidodto = new PedidoDTO();//criação de um objeto para atribuir esses valores aos seus atributos

        pedidodto.setForma_pag(forma_pag);
        float fValorTotal = Float.parseFloat(valorTotal);  // método de conversão de string para float
        //Convertendo o ValorTotal de String (do campo txt) para Float (tipo float no PedidoDTO)
        pedidodto.setValor_total(fValorTotal);
        pedidodto.setObservacoes(observ);

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        try {
            java.util.Date date = sdf.parse(txtDataCadPedido.getText());
            java.sql.Date dataSql = new java.sql.Date(date.getTime());
            data = dataSql;
        } catch (ParseException ex) {
            Logger.getLogger(CadEbookVIEW.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Convertendo a data novamente para o formato de dato que o banco aceita
        if (rbnCpf.isSelected() == true) {
            pedidodto.setSituacaocad_cliente(clientecpf);
            // eo contrario acontece quando o botão de cnpj é selecionado     
        } else if (rbnCnpj.isSelected() == true) {
            pedidodto.setSituacaocad_cliente(clientecnpj);
        }

        pedidodto.setData(data);

        PedidoDAO pedidodao = new PedidoDAO();
        pedidodao.CadPedido(pedidodto); //atribuindo todos os valores jogados no objeto para o metodo de cadastrar pedido
        pedidodto.setId_pedido(pedidodao.retornaUltimoPedido()); //retornando o id do pedido para atribui-lo no item pedido

        itemPedido = (DefaultTableModel) tblListaCadPedido.getModel(); // relacionando a tabela itempedido para a tbllistacadpedido

        for (int i = 0; i < itemPedido.getRowCount(); i++) { // laço responsável por pegar valores de cada tupla da tabela de itens e cadastrar no banco

            //instanciando os objetos que vão chamar os métodos necessários para o cadastro
            EbookDTO objebook = new EbookDTO();
            EbookDAO dao_e = new EbookDAO();
            ItemPedidoDTO item = new ItemPedidoDTO();

            item.setPedidodto(pedidodto);// aqui ele está chamando o id do pedido que foi atribuído anteriormente ao objeto pedidodto
            objebook.setIsbn(itemPedido.getValueAt(i, 0).toString());
            item.setEbookdto(objebook);
            item.setQtd_copias(Integer.valueOf(itemPedido.getValueAt(i, 2).toString()));
            item.setPreco_vendido(Float.valueOf(itemPedido.getValueAt(i, 4).toString()));
            ItemPedidoDAO itemdao = new ItemPedidoDAO();
            itemdao.cadastrarItemPedido(item);
        }

    }

    /**
     * @throws SQLException Método criado para adicionar os itensPedido (Ebook)
     * ao Pedido em si
     */
    private void adicionaEbook() {

        String titulo = txtTituloEbookSetado.getText();
        EbookDTO e = new EbookDTO();
        PedidoDAO dao = new PedidoDAO();
        e.setTitulo_eb(titulo);
        dao.pesquisar(titulo);

        if (e.getTitulo_eb() != null && txtQuantCopiasCadPedido.getText() != null) { //condição que permite que o item seja cadastrado caso o campo de titulo seja diferente de nulo
            int quantidadeCopias = Integer.valueOf(txtQuantCopiasCadPedido.getText()); // convertendo o campo de texto quantidade para inteiro
            preco = Float.parseFloat(txtPrecoEbook.getText()); // convertendo o campo de texto preco para inteiro
            qtd = Integer.valueOf(txtQuantCopiasCadPedido.getText());
            // calculo responsavel por multiplicar a quantidade de copias pelo preco dos ebooks
            //e depois somar todos os subtotais e igualar ao total de dodo o pedido.
            subtotal = preco * qtd;
            total += subtotal;

            // convertendo valor para string e convertendo novamente para formatacao do float
            if (qtd > 0) { //condição responsável por verificar que o usuárionão coloque um valor menor ou igual a zero, 
                //na quantidade de cópias
                //se maior que zero, ele poderá adicionar os itens a tabela de itempdido

                txtValorTotalCadPedido.setText(String.valueOf(total).replace(".", ","));

                //tabela pega valores dos campos de texto dos itens do pedido
                itemPedido = (DefaultTableModel) tblListaCadPedido.getModel();
                itemPedido.addRow(new Object[]{
                    txtIsbnCadPedido.getText(),
                    txtTituloEbookSetado.getText(),
                    txtQuantCopiasCadPedido.getText(),
                    txtPrecoEbook.getText(),
                    subtotal
                });

            } else {
                JOptionPane.showMessageDialog(null, "A quantidade de cópias não pode ser menor ou igual a zero!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Todos os campos devem ser preenchidos!");
        }
    }

    /**
     * Método criado para limpar todos os campos toda vez que que um pedido for
     * salvo. Sua função é simples: apenas limpará os campos inseridos e o
     * usuário poderá "criar" outro novamente.
     */
    private void limparCampos() {
        //variaveis de calculo sendo resetadas para evitar que sejam guardadas na memória
        total = 0;
        preco = 0;
        subtotal = 0;
        txtEmailClientePedido.setText("");
        txtClienteCadPedido.setText("");
        txtIsbnCadPedido.setText("");
        txtObservacoesCadPedido.setText("");
        txtProdutoCadPedido.setText("");
        txtQuantCopiasCadPedido.setText("");
        txtValorTotalCadPedido.setText("");
        txtCpfCadPedido.setText("");
        txtCnpjCadPedido.setText("");
        txtIdCadPedido.setText("");
        txtTituloEbookSetado.setText("");
        txtPrecoEbook.setText("");
        itemPedido = (DefaultTableModel) tblListaCadPedido.getModel();
        itemPedido.setRowCount(0);// limpa dados da tabela 
        DefaultTableModel tblpesquisaitem = (DefaultTableModel) tblPesquisaEbookPedido.getModel();
        tblpesquisaitem.setRowCount(0);
        txtClienteCadPedido.requestFocus();
        txtIsbnCadPedido.requestFocus();

    }

    /**
     * Limpar campos do itempedido de pesquisa toda vez que adicionar um novo
     * item
     */
    private void limparCaposItemPedido() {
        txtIsbnCadPedido.setText("");
        txtProdutoCadPedido.setText("");
        txtQuantCopiasCadPedido.setText("");
        txtTituloEbookSetado.setText("");
        txtPrecoEbook.setText("");
        DefaultTableModel tblpesquisaitem = (DefaultTableModel) tblPesquisaEbookPedido.getModel();
        tblpesquisaitem.setRowCount(0);
        txtIsbnCadPedido.requestFocus();

    }

    /**
     * Método setarCampos criado para atribuir temporariamente alguns dados da
     * tabela de pesquisa aos campos de texto.
     */
    private void setarCamposTblEbook() {

        int setar = tblPesquisaEbookPedido.getSelectedRow();
        txtIsbnCadPedido.setText(tblPesquisaEbookPedido.getModel().getValueAt(setar, 0).toString());
        txtPrecoEbook.setText(tblPesquisaEbookPedido.getModel().getValueAt(setar, 2).toString());
        txtTituloEbookSetado.setText(tblPesquisaEbookPedido.getModel().getValueAt(setar, 1).toString());
    }

    /**
     *
     * @throws SQLException Método de alteração do pedido e itempedido
     */
    private void alteraPedido() throws SQLException {
        String clientecpf;
        String clientecnpj;
        String obs;
        int idPedido;
        float valorT;
        Date datamysql = null;
        String pag;

        // variaveis pegando os valores digitados nos campos de texto e passando para a classe dto
        idPedido = Integer.valueOf(txtIdCadPedido.getText());
        clientecpf = txtCpfCadPedido.getText();
        clientecnpj = txtCnpjCadPedido.getText();
        obs = txtObservacoesCadPedido.getText();
        valorT = Float.valueOf(txtValorTotalCadPedido.getText().replace(",", "."));
        pag = txtFormaPagamentoCadPedido.getText();

        PedidoDTO dto = new PedidoDTO();
        // em seguida é feita uma mascara de formatação para receber o valor da data no formato padrao
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

        try { // dentro do bloco de tratamento  a conversao da data digitada 
            //por fim é setada a data no objeto de dto
            java.util.Date date = sdf.parse(txtDataCadPedido.getText());
            java.sql.Date dataSql = new java.sql.Date(date.getTime());
            // por fim a data é inserida formatada no objeto dto
            dto.setData(dataSql);
        } catch (ParseException ex) { // caso haja algum erro na formatação data será informado
            JOptionPane.showMessageDialog(null, "Erro na formatação de data!!!!" + ex);
            Logger.getLogger(AltCadEbookVIEW.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (rbnCpf.isSelected() == true) { // se a opcao de cpf for selecionada, o objeto vai pegar o que estiver escrito no campo de cpf
            dto.setSituacaocad_cliente(clientecpf);
            // eo contrario acontece quando o botão de cnpj é selecionado     
        } else if (rbnCnpj.isSelected() == true) { // se a opcao de cnpj for selecionada, o objeto vai pegar o que estiver escrito no campo de cnpj
            dto.setSituacaocad_cliente(clientecnpj);
        }
        // métodos set pegando valores atribuidos às variaveis criadas
        dto.setObservacoes(obs);
        dto.setForma_pag(pag);
        dto.setValor_total(valorT);
        dto.setId_pedido(idPedido);

        PedidoDAO dao = new PedidoDAO();
        dao.alterarPedido(dto);
    } // fim metodo alterar pedido e itempedido   

    /**
     *
     * @throws SQLException Método para listar os itens do pedido junto ao
     * pedido, quando pesquisado
     *
     */
    private void setarItemPedido() throws SQLException {

        int id = Integer.parseInt(txtIdCadPedido.getText());
        txtValorTotalCadPedido.getText().replace(".", ",");
        if (rbnCpf.isSelected() == true) {
            txtCpfCadPedido.getText();

            ItemPedidoDAO dao = new ItemPedidoDAO();
            dao.setarItemPePedido(tblListaCadPedido, id, txtCpfCadPedido, txtDataCadPedido, txtValorTotalCadPedido, txtObservacoesCadPedido);
            //chamando métodod de setagem passando como parametro a variavel inteira e os campos de texto
        } else if (rbnCnpj.isSelected() == true) {
            txtCnpjCadPedido.getText();

            ItemPedidoDAO dao = new ItemPedidoDAO();
            dao.setarItemPePedido(tblListaCadPedido, id, txtCnpjCadPedido, txtDataCadPedido, txtValorTotalCadPedido, txtObservacoesCadPedido);
            //chamando métodod de setagem passando como parametro a variavel inteira e os campos de texto
        }

    }

    /*
     * Método criado para setar os campos do cliente no pedido
     */
    private void setarcli() throws SQLException {
        String nome1, nome2, email, cpf, cnpj;
        PedidoDAO setardao = new PedidoDAO();
        txtClienteCadPedido.getText();
        txtEmailClientePedido.getText();

        cpf = txtCpfCadPedido.getText();
        cnpj = txtCnpjCadPedido.getText();

        setardao.buscaCliente(cpf, txtClienteCadPedido, txtEmailClientePedido);

        if (rbnCpf.isSelected() == true) {

            setardao.buscaCliente(cpf, txtClienteCadPedido, txtEmailClientePedido);

            // eo contrario acontece quando o botão de cnpj é selecionado     
        } else if (rbnCnpj.isSelected() == true) {
            setardao.buscaCliente(cnpj, txtClienteCadPedido, txtEmailClientePedido);
        }

        // eo contrario acontece quando o botão de cnpj é selecionado    
    }

    /**
     * Método criado para enviar uma mensagem de confirmação do pedido ao
     * cliente
     */
    private void sentEmail() {

        //chamando valores para imprimir na mensagem do comprovante
        PedidoDAO dao = new PedidoDAO();
        String id = txtIdCadPedido.getText();
        String cli = txtClienteCadPedido.getText();
        String emailcli = txtEmailClientePedido.getText();
        dao.retornaUltimoPedido();
        id = String.valueOf(dao.retornaUltimoPedido());

        // email remetente que enviará o email para o cliente
        String username = "goread.project@gmail.com";//Declarando variavel username com o email que envia as mensagens
        String password = "tmaf nabe anjv subh";//Declarando variavel password com a senha de acesso de App

        Properties props = new Properties();//Objeto criado para ser atribuido metodos das bibliotecas
        props.put("mail.smtp.auth", "true");//Configuração que permite o protocolo de autentificação seja usado
        props.put("mail.smtp.starttls.enable", "true");//Configuração que instrui o servidor do Identity Manager a usar SSL para se comunicar com o SMTP
        props.put("mail.smtp.host", "smtp.gmail.com");//Configuração que indica quem é o host no caso gmail.com
        props.put("mail.smtp.port", "465");//Configuração que indica a porta a ser utilizada no caso a do google
        props.put("mail.smtp.ssl.protocols", "TLSv1.2");//Especifica os protocolos SSL que serão habilitados para conexões SSL e utilizado o protocolo TLSv1.2 = Configuration Manager comunicação segura
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");//Maneira simples de capturar uma variedade de políticas relacionadas aos socket que estão sendo construídos, 
        //javax.net.ssl.SSLSocketFactory = atua como uma Factory para criar Socket seguros. Esta classe é uma subclasse abstrata de javax.
        //Objeto Session criado com um metodo getInstance, objeto props com uma classe de Autentificação
        Session session = Session.getInstance(props,
                new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {//Autentificando a senha
                return new PasswordAuthentication(username, password);//Retornando a Autentificação para a variavel username e password
            }
        });

        try {
            Message message = new MimeMessage(session); //Declarando um objeto message no qual contem uma Classe MimeMesssage representa uma mensagem de e-mail no estilo MIME e dentro dela temos o objeto session referente a autentificação da senha
            message.setFrom(new InternetAddress(emailcli));//Dizendo para quem a mensagem será enviada
            message.setRecipients(Message.RecipientType.TO,
                    InternetAddress.parse(emailcli));
            message.setSubject("Pedido Finalizado");//Titulo do Email
            message.setText("Prezado(a) " + cli + ", o seu pedido foi realizado com sucesso!" + "\n Dentro de uma hora você receberá um novo e-mail "
                    + "com os anexos dos e-books em PDF.\n ID Pedido: "
                    + id + "\n\n Para resoluções de problemas, contate-nos por este e-mail e informe seu ID do pedido. \nEsperamos sempre vê-lo(a) de volta!!"
                    + "\nPara mais dúvidas: goread.project@gmail.com"); //Texto contido dentro do email

            Transport.send(message);//Responsavel por enviar a mensagem

            System.out.println("Feito"); //Texto apresentado na janela debug se a mensagem foi enviada

        } catch (MessagingException e) {//erro
            throw new RuntimeException(e);
        }
    }

}
